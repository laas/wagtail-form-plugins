# Generated by Django 5.2.1 on 2025-07-08 14:29

import django.core.serializers.json
import django.core.validators
import django.db.models.deletion
import re
import wagtail.contrib.forms.models
import wagtail.fields
import wagtail_form_plugins.conditional_fields.blocks
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('demo', '0001_initial'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('field_name', models.CharField(blank=True, max_length=254)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, default='Forms list', help_text='A rich text introduction to be displayed before the list of forms.', verbose_name='Form index page introduction')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('unique_response', models.BooleanField(default=False, help_text='If checked, the user may fill in the form only once.', verbose_name='Unique response')),
                ('intro', wagtail.fields.RichTextField(blank=True, verbose_name='Form introduction text')),
                ('form_fields', wagtail.fields.StreamField([('singleline', 20), ('multiline', 23), ('email', 25), ('number', 29), ('url', 31), ('checkbox', 34), ('checkboxes', 37), ('dropdown', 39), ('multiselect', 41), ('radio', 39), ('date', 43), ('datetime', 45), ('hidden', 47), ('file', 49), ('label', 50)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'form_classname': 'formbuilder-field-block-label', 'help_text': 'Short text describing the field.', 'label': 'Label'}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'The id used to identify this field, for instance in conditional fields.', 'label': 'Identifier', 'required': True, 'validators': [django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')]}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Text displayed below the label to add more information.', 'label': 'Help text', 'required': False}), 3: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Check to make the field not editable by the user.', 'label': 'Disabled', 'required': False}), 4: ('wagtail_form_plugins.streamfield.blocks.RequiredBlock', (), {}), 5: ('wagtail.blocks.CharBlock', (), {'help_text': 'Single line text used to pre-fill the field.', 'label': 'Default value', 'required': False}), 6: ('wagtail.blocks.IntegerBlock', (), {'default': 0, 'help_text': 'Minimum amount of characters allowed in the field.', 'label': 'Min length'}), 7: ('wagtail.blocks.IntegerBlock', (), {'default': 255, 'help_text': 'Maximum amount of characters allowed in the field.', 'label': 'Max length'}), 8: ('wagtail.blocks.CharBlock', (), {'form_classname': 'formbuilder-beb-field', 'validators': [wagtail_form_plugins.conditional_fields.blocks.validate_field]}), 9: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('eq', 'is equal to'), ('neq', 'is not equal to'), ('is', 'is'), ('nis', 'is not'), ('lt', 'is lower than'), ('lte', 'is lower or equal to'), ('ut', 'is upper than'), ('ute', 'is upper or equal to'), ('bt', 'is before than'), ('bte', 'is before or equal to'), ('at', 'is after than'), ('ate', 'is after or equal to'), ('ct', 'contains'), ('nct', 'does not contain'), ('c', 'is checked'), ('nc', 'is not checked')], 'form_classname': 'formbuilder-beb-operator'}), 10: ('wagtail.blocks.CharBlock', (), {'form_classname': 'formbuilder-beb-val-char', 'required': False}), 11: ('wagtail.blocks.DecimalBlock', (), {'form_classname': 'formbuilder-beb-val-num', 'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'form_classname': 'formbuilder-beb-val-list', 'required': False}), 13: ('wagtail.blocks.DateBlock', (), {'form_classname': 'formbuilder-beb-val-date', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('field', 8), ('operator', 9), ('value_char', 10), ('value_number', 11), ('value_dropdown', 12), ('value_date', 13)]], {}), 15: ('wagtail.blocks.ListBlock', (14,), {'default': [], 'form_classname': 'formbuilder-beb-rules', 'label': 'Conditions'}), 16: ('wagtail.blocks.StructBlock', [[('field', 8), ('operator', 9), ('value_char', 10), ('value_number', 11), ('value_dropdown', 12), ('value_date', 13), ('rules', 15)]], {}), 17: ('wagtail.blocks.ListBlock', (16,), {'default': [], 'form_classname': 'formbuilder-beb-rules', 'label': 'Conditions'}), 18: ('wagtail.blocks.StructBlock', [[('field', 8), ('operator', 9), ('value_char', 10), ('value_number', 11), ('value_dropdown', 12), ('value_date', 13), ('rules', 17)]], {}), 19: ('wagtail.blocks.ListBlock', (18,), {'default': [], 'form_classname': 'formbuilder-field-block-rule', 'label': 'Visibility condition', 'max_num': 1}), 20: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 5), ('min_length', 6), ('max_length', 7), ('rule', 19)]], {}), 21: ('wagtail.blocks.TextBlock', (), {'help_text': 'Multi-line text used to pre-fill the field.', 'label': 'Default value', 'required': False}), 22: ('wagtail.blocks.IntegerBlock', (), {'default': 1024, 'help_text': 'Maximum amount of characters allowed in the field.', 'label': 'Max length'}), 23: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 21), ('min_length', 6), ('max_length', 22), ('rule', 19)]], {}), 24: ('wagtail.blocks.EmailBlock', (), {'help_text': 'E-mail used to pre-fill the field.', 'label': 'Default value', 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 24), ('rule', 19)]], {}), 26: ('wagtail.blocks.DecimalBlock', (), {'help_text': 'Number used to pre-fill the field.', 'label': 'Default value', 'required': False}), 27: ('wagtail.blocks.IntegerBlock', (), {'help_text': 'Minimum number allowed in the field.', 'label': 'Min value', 'required': False}), 28: ('wagtail.blocks.IntegerBlock', (), {'help_text': 'Maximum number allowed in the field.', 'label': 'Max value', 'required': False}), 29: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 26), ('min_value', 27), ('max_value', 28), ('rule', 19)]], {}), 30: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL used to pre-fill the field.', 'label': 'Default value', 'required': False}), 31: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 30), ('rule', 19)]], {}), 32: ('wagtail_form_plugins.streamfield.blocks.RequiredBlock', ('the box must be checked',), {}), 33: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'If checked, the box will be checked by default.', 'label': 'Checked', 'required': False}), 34: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 32), ('initial', 33), ('rule', 19)]], {}), 35: ('wagtail_form_plugins.streamfield.blocks.RequiredBlock', ('at least one box must be checked',), {}), 36: ('wagtail.blocks.TextBlock', (), {'label': 'Choices list, one per line'}), 37: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 35), ('choices', 36), ('rule', 19)]], {}), 38: ('wagtail_form_plugins.streamfield.blocks.RequiredBlock', ('an item must be selected',), {}), 39: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 38), ('choices', 36), ('rule', 19)]], {}), 40: ('wagtail_form_plugins.streamfield.blocks.RequiredBlock', ('at least one item must be selected',), {}), 41: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 40), ('choices', 36), ('rule', 19)]], {}), 42: ('wagtail.blocks.DateBlock', (), {'help_text': 'Date used to pre-fill the field.', 'label': 'Default value', 'required': False}), 43: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 42), ('rule', 19)]], {}), 44: ('wagtail.blocks.DateTimeBlock', (), {'help_text': 'Date and time used to pre-fill the field.', 'label': 'Default value', 'required': False}), 45: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 44), ('rule', 19)]], {}), 46: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hidden text used to pre-fill the field.', 'label': 'Default value', 'required': False}), 47: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('initial', 46), ('rule', 19)]], {}), 48: ('wagtail.blocks.MultipleChoiceBlock', [], {'choices': [('pdf', 'pdf'), ('jpg', 'jpg'), ('jpeg', 'jpeg'), ('png', 'png')], 'label': 'Allowed file extensions'}), 49: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('allowed_extensions', 48), ('rule', 19)]], {}), 50: ('wagtail.blocks.StructBlock', [[('label', 0), ('identifier', 1), ('help_text', 2), ('disabled', 3), ('required', 4), ('rule', 19)]], {})}, verbose_name='Form fields')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True, default='Thank you!', verbose_name='Text displayed after form submission')),
                ('validation_title', models.CharField(default='User validation required to fill a public form', max_length=100, verbose_name='E-mail title')),
                ('validation_body', wagtail.fields.RichTextField(default='Please click on the following link to fill the form: {validation_url} .', verbose_name='E-mail content')),
                ('emails_to_send', wagtail.fields.StreamField([('email_to_send', 4)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'E-mail addresses of the recipients, separated by comma.', 'label': 'Recipient list'}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'E-mail addresses set in the “reply_to” email field, separated by comma.', 'label': 'Reply to', 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'The subject of the e-mail.', 'label': 'Subject'}), 3: ('wagtail.blocks.RichTextBlock', (), {'help_text': 'The body of the e-mail.', 'label': 'Message'}), 4: ('wagtail.blocks.StructBlock', [[('recipient_list', 0), ('reply_to', 1), ('subject', 2), ('message', 3)]], {})}, default=[{'type': 'email_to_send', 'value': {'message': 'Hello {author.full_name},</p><p>On {result.publish_date} at {result.publish_time}, the user {user.full_name} has submitted the form "{form.title}", with the following content:</p><p></p><p>{result.data}</p><p></p><p>Have a nice day.', 'recipient_list': '{author.email}', 'subject': 'New entry for form "{form.title}"'}}, {'type': 'email_to_send', 'value': {'message': 'Hello {user.full_name},</p><p>You just submitted the form "{form.title}", with the following content:</p><p></p><p>{result.data}</p><p></p><p>The form author has been informed.</p><p>Have a nice day.', 'recipient_list': '{user.email}', 'subject': 'Confirmation of the submission of the form "{form.title}"'}}], verbose_name='E-mails to send after form submission')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='CustomFormSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_data', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('submit_time', models.DateTimeField(auto_now_add=True, verbose_name='submit time')),
                ('index', models.IntegerField(default=0)),
                ('email', models.EmailField(default='', max_length=254)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.page')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
